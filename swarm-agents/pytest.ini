[tool:pytest]
# PyTest Configuration for TGE Swarm Backend Testing

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum pytest version
minversion = 7.0

# Add markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for service interactions
    e2e: End-to-end tests for complete workflows
    performance: Performance and load tests
    slow: Tests that take more than 10 seconds
    redis: Tests requiring Redis server
    database: Tests requiring database connection
    docker: Tests requiring Docker daemon
    websocket: Tests requiring WebSocket connections
    mock: Tests using mocked dependencies

# Test execution options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --color=yes
    --durations=10
    --showlocals
    --disable-warnings

# Async test support
asyncio_mode = auto

# Coverage configuration
addopts = --cov=backend --cov-report=html --cov-report=term-missing --cov-fail-under=80

# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning
    ignore:.*unclosed.*:ResourceWarning

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test data and temporary files
tmp_path_retention_count = 3
tmp_path_retention_policy = failed

# Timeout settings
timeout = 300
timeout_method = thread