# Prometheus Configuration for TGE Swarm Monitoring
# Comprehensive monitoring setup for all swarm components

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'tge-swarm'
    environment: 'production'

# Rule files for alerting
rule_files:
  - "/etc/prometheus/rules/*.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: '/metrics'

  # TGE Swarm Queen Orchestrator
  - job_name: 'swarm-queen'
    static_configs:
      - targets: ['swarm-queen:8001']
    scrape_interval: 15s
    metrics_path: '/metrics'
    scrape_timeout: 10s
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: swarm-queen:8001

  # Memory Coordinator
  - job_name: 'memory-coordinator'
    static_configs:
      - targets: ['swarm-memory-coordinator:8002']
    scrape_interval: 30s
    metrics_path: '/metrics'

  # Swarm Agents Discovery
  - job_name: 'swarm-agents'
    consul_sd_configs:
      - server: 'consul:8500'
        services: ['tge-agent-scraping-efficiency', 'tge-agent-keyword-precision', 'tge-agent-api-reliability', 'tge-agent-performance', 'tge-agent-data-quality']
    relabel_configs:
      - source_labels: [__meta_consul_service]
        target_label: service
      - source_labels: [__meta_consul_node]
        target_label: node
      - source_labels: [__meta_consul_tags]
        target_label: tags
        regex: ',(.+),'
      - source_labels: [__meta_consul_service_metadata_agent_type]
        target_label: agent_type
      - source_labels: [__meta_consul_service_metadata_instance_id]
        target_label: instance_id
    scrape_interval: 30s
    metrics_path: '/metrics'

  # PostgreSQL Database Metrics
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-primary:9187']  # Requires postgres_exporter
    scrape_interval: 30s
    metrics_path: '/metrics'

  # Redis Cluster Metrics
  - job_name: 'redis-cluster'
    static_configs:
      - targets: 
        - 'redis-master-1:9121'  # Requires redis_exporter
        - 'redis-master-2:9121'
        - 'redis-master-3:9121'
    scrape_interval: 30s
    metrics_path: '/metrics'
    relabel_configs:
      - source_labels: [__address__]
        regex: 'redis-master-(.+):9121'
        target_label: redis_instance
        replacement: 'master-${1}'

  # Docker Container Metrics
  - job_name: 'docker-containers'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: '/metrics'
    relabel_configs:
      - source_labels: [container_label_swarm_managed]
        regex: 'true'
        action: keep
      - source_labels: [container_label_swarm_agent_name]
        target_label: agent_name
      - source_labels: [container_label_swarm_agent_type]
        target_label: agent_type

  # Node Exporter for System Metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s

  # HAProxy Load Balancer
  - job_name: 'haproxy'
    static_configs:
      - targets: ['haproxy:8404']
    scrape_interval: 30s
    metrics_path: '/stats;csv'

  # Consul Service Discovery
  - job_name: 'consul'
    static_configs:
      - targets: ['consul:8500']
    scrape_interval: 30s
    metrics_path: '/v1/agent/metrics'
    params:
      format: ['prometheus']

  # Grafana Metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    scrape_interval: 60s
    metrics_path: '/metrics'

  # AlertManager
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
    scrape_interval: 30s

  # TGE Application Metrics (Main Scraper)
  - job_name: 'tge-application'
    static_configs:
      - targets: ['tge-api:8000']
    scrape_interval: 15s
    metrics_path: '/metrics'
    honor_labels: true
    params:
      collect[]: 
        - 'tge_detection_total'
        - 'tge_false_positives_total'
        - 'api_calls_total'
        - 'scraping_duration_seconds'
        - 'keyword_matches_total'

  # External API Health Checks
  - job_name: 'external-apis'
    static_configs:
      - targets: 
        - 'twitter-api'
        - 'news-apis'
    scrape_interval: 60s
    metrics_path: '/health'
    scheme: 'https'
    scrape_timeout: 30s

# Remote write configuration for long-term storage (optional)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint/api/v1/write"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500

# Recording rules for complex queries
# Precompute frequently used queries for performance
recording_rules:
  - name: tge_swarm_performance
    interval: 30s
    rules:
    - record: swarm:agent_health_ratio
      expr: |
        (
          count by (agent_type) (up{job="swarm-agents"} == 1)
          /
          count by (agent_type) (up{job="swarm-agents"})
        ) * 100

    - record: swarm:memory_usage_percentage
      expr: |
        (
          (container_memory_usage_bytes{container_label_swarm_managed="true"} 
          / 
          container_spec_memory_limit_bytes{container_label_swarm_managed="true"}) * 100
        )

    - record: swarm:cpu_usage_percentage
      expr: |
        rate(container_cpu_usage_seconds_total{container_label_swarm_managed="true"}[5m]) * 100

    - record: tge:detection_accuracy_ratio
      expr: |
        (
          rate(tge_true_positives_total[5m])
          /
          (rate(tge_true_positives_total[5m]) + rate(tge_false_positives_total[5m]))
        ) * 100

    - record: tge:api_efficiency_ratio
      expr: |
        rate(tge_detection_total[5m]) / rate(api_calls_total[5m])

# Storage configuration
storage:
  tsdb:
    retention.time: 15d
    retention.size: 10GB
    path: /prometheus
    wal-compression: true

# Global settings
global:
  # How frequently to scrape targets by default
  scrape_interval: 15s
  # How long until a scrape request times out
  scrape_timeout: 10s
  # How frequently to evaluate rules
  evaluation_interval: 15s