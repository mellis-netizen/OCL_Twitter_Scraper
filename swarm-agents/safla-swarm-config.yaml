---
# SAFLA Neural Memory Swarm Configuration for TGE News Sweeper
swarm:
  name: "TGE-Monitoring-Optimization-Swarm"
  version: "1.0"
  mode: "queen-directed"
  memory_system: "SAFLA"
  
  architecture:
    type: "hierarchical"
    depth: 3
    persistence: true
    memory_path: "./safla-memory"
    coordination_strategy: "adaptive"

  queen:
    role: "master-coordinator"
    intelligence_level: "opus-4"
    specializations:
      - "system-architecture-analysis"
      - "strategic-planning"
      - "cross-cutting-optimization"
      - "pattern-synthesis"
    capabilities:
      - "worker-deployment"
      - "real-time-coordination"
      - "adaptive-learning"
      - "performance-monitoring"
    reporting:
      interval: "5m"
      format: "structured-markdown"
      metrics: true

  workers:
    - name: "scraping-specialist"
      role: "code-analyzer"
      focus: 
        - "scraper-implementations"
        - "rate-limiting-patterns"
        - "api-usage-optimization"
        - "concurrent-processing"
      files:
        - "src/news_scraper*.py"
        - "src/twitter_monitor*.py"
        - "src/utils.py"
      
    - name: "keyword-analyzer"
      role: "algorithm-optimizer"
      focus:
        - "keyword-matching-accuracy"
        - "false-positive-reduction"
        - "pattern-recognition"
        - "semantic-analysis"
      files:
        - "config.py"
        - "src/news_scraper*.py"
        - "src/main*.py"
      
    - name: "api-guardian"
      role: "integration-specialist"
      focus:
        - "api-reliability"
        - "error-handling-robustness"
        - "retry-mechanisms"
        - "rate-limit-compliance"
      files:
        - "src/twitter_monitor*.py"
        - "src/email_notifier.py"
        - "src/health_endpoint.py"
      
    - name: "performance-optimizer"
      role: "performance-engineer"
      focus:
        - "memory-optimization"
        - "cpu-efficiency"
        - "bottleneck-identification"
        - "resource-management"
      files:
        - "src/main*.py"
        - "src/*_optimized.py"
        - "test_optimized_system*.py"
      
    - name: "production-auditor"
      role: "devops-specialist"
      focus:
        - "production-readiness"
        - "logging-quality"
        - "monitoring-coverage"
        - "deployment-reliability"
      files:
        - "docker/"
        - "*.sh"
        - "cloudformation-template.yaml"
        - "terraform/"
      
    - name: "data-quality-sentinel"
      role: "quality-assurance"
      focus:
        - "data-validation"
        - "sanitization-coverage"
        - "deduplication-effectiveness"
        - "integrity-checks"
      files:
        - "src/utils.py"
        - "src/news_scraper*.py"
        - "src/email_notifier.py"
      
    - name: "concurrency-expert"
      role: "async-specialist"
      focus:
        - "async-pattern-optimization"
        - "race-condition-prevention"
        - "deadlock-avoidance"
        - "thread-safety"
      files:
        - "src/main*.py"
        - "src/twitter_monitor*.py"
        - "src/news_scraper*.py"
      
    - name: "monitoring-architect"
      role: "observability-engineer"
      focus:
        - "metrics-collection"
        - "alerting-effectiveness"
        - "health-checks"
        - "debugging-tools"
      files:
        - "src/health_endpoint.py"
        - "docker/prometheus.yml"
        - "docs/production/"

  coordination:
    communication_protocol: "memory-shared"
    sync_interval: "2m"
    cross_pollination: true
    adaptive_focus: true
    conflict_resolution: "queen-arbitrated"
    
  memory:
    context_window: "comprehensive"
    retention_policy: "persistent"
    embedding_model: "claude-3-opus"
    indexing_strategy: "semantic-chunking"
    
  reporting:
    output_directory: "./reports"
    formats: ["markdown", "json"]
    include_metrics: true
    generate_summaries: true
    
  optimization:
    target_areas:
      - "scraping-efficiency"
      - "keyword-accuracy"
      - "production-readiness"
      - "performance-optimization"
      - "reliability-enhancement"
    
    success_metrics:
      - "reduced-false-positives"
      - "improved-response-times"
      - "enhanced-error-handling"
      - "optimized-resource-usage"
      - "increased-coverage"