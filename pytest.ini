[pytest]
# Pytest Configuration for TGE Scraping Test Suite

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Coverage settings
addopts =
    --verbose
    --strict-markers
    --tb=short
    --cov=src
    --cov-report=html:reports/coverage
    --cov-report=term-missing
    --cov-report=xml
    --cov-config=.coveragerc
    -ra

# Coverage requirements
[coverage:run]
source = src
omit =
    */tests/*
    */venv/*
    */__pycache__/*
    */site-packages/*

[coverage:report]
# Coverage thresholds
fail_under = 80
precision = 2
show_missing = True
skip_covered = False

exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract

# Test markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    performance: Performance and benchmark tests
    slow: Tests that take >1 second to run
    requires_api: Tests that require external API access
    requires_network: Tests that require network connectivity

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s - %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Timeout settings (prevent hanging tests)
timeout = 300
timeout_method = thread

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Minimum Python version
minversion = 3.8

# Parallel execution (use with pytest-xdist)
# Run with: pytest -n auto
# -n auto will auto-detect CPU count

# Test ordering (use with pytest-ordering)
# Faster tests first, slow tests last

# Fixtures
console_output_style = progress

# Cache
cache_dir = .pytest_cache
